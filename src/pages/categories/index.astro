---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import { CATEGORIES, SITE } from "@consts";
import ArrowCard from "@components/ArrowCard.astro";

const posts = await getCollection("blog");
const nonDraftPosts = posts.filter(post => !post.data.draft);

type CategoryMap = {
  [category: string]: {
    posts: any[];
    count: number;
  };
}

const categories = nonDraftPosts.reduce((acc: CategoryMap, post) => {
  if (post.data.category) {
    const categoryList = typeof post.data.category === 'string' 
      ? [post.data.category] 
      : Array.isArray(post.data.category) 
        ? post.data.category 
        : [post.data.category];
    
    categoryList.forEach(category => {
      if (!acc[category]) {
        acc[category] = { posts: [], count: 0 };
      }
      acc[category].posts.push(post);
      acc[category].count++;
    });
  }
  return acc;
}, {});

const sortedCategories = Object.keys(categories).sort();
---

<PageLayout title={`${CATEGORIES.TITLE} | ${SITE.NAME}`} description={CATEGORIES.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <h1 class="animate font-semibold text-xl text-black dark:text-white">
        All Categories
      </h1>
      <div class="space-y-8">
        {sortedCategories.map(category => (
          <section class="animate">
            <h2 class="font-semibold text-lg text-black dark:text-white mb-4">
              {category}
            </h2>
            <ul class="space-y-2">
              {categories[category].posts
                .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
                .map(post => (
                  <li>
                    <ArrowCard entry={post} />
                  </li>
                ))
              }
            </ul>
          </section>
        ))}
      </div>
    </div>
  </Container>
</PageLayout>
