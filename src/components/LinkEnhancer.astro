---
// LinkEnhancer.astro
---

<script>
  document.addEventListener("DOMContentLoaded", function() {
    enhanceLinks();
  });

  document.addEventListener("astro:page-load", function() {
    enhanceLinks();
  });

  function enhanceLinks(): void {
    const article = document.querySelector("article");
    if (!article) return;

    const links = article.querySelectorAll("a");

    links.forEach(link => {
      const href = link.getAttribute("href");
      if (!href) return;

      processLink(link as HTMLAnchorElement, href);
    });
  }

  function processLink(link: HTMLAnchorElement, href: string): void {
    if (href.startsWith("http://") || href.startsWith("https://")) {
      processExternalLink(link);
    }

    addKeyboardNavigation(link);
  }

  function processExternalLink(link: HTMLAnchorElement): void {
    link.setAttribute("target", "_blank");
    link.setAttribute("rel", "noopener noreferrer");
  }

  function addKeyboardNavigation(link: HTMLAnchorElement): void {
    if (!link.hasAttribute("tabindex")) {
      link.setAttribute("tabindex", "0");
    }

    link.addEventListener("keydown", function(e: KeyboardEvent) {
      if (e.key === "Enter" || e.key === " ") {
        e.preventDefault();
        link.click();
      }
    });

    if (!link.hasAttribute("aria-label") && link.textContent) {
      const href = link.getAttribute("href");
      if (href?.startsWith("http")) {
        try {
          const domain = new URL(href).hostname;
          link.setAttribute("aria-label", `${link.textContent} - External link to ${domain}`);
        } catch {
          link.setAttribute("aria-label", `${link.textContent} - External link`);
        }
      } else if (href?.startsWith("mailto:")) {
        link.setAttribute("aria-label", `Send email to ${link.textContent}`);
      } else {
        link.setAttribute("aria-label", `Internal link: ${link.textContent}`);
      }
    }
  }

  if (typeof MutationObserver !== "undefined") {
    const observer = new MutationObserver(function(mutations) {
      mutations.forEach(function(mutation) {
        if (mutation.type === "childList") {
          mutation.addedNodes.forEach(function(node) {
            if (node.nodeType === Node.ELEMENT_NODE) {
              const element = node as Element;
              const newLinks = element.querySelectorAll ? element.querySelectorAll("a") : [];
              newLinks.forEach(link => {
                const href = link.getAttribute("href");
                if (href) {
                  processLink(link as HTMLAnchorElement, href);
                }
              });
            }
          });
        }
      });
    });

    const article = document.querySelector("article");
    if (article) {
      observer.observe(article, {
        childList: true,
        subtree: true
      });
    }
  }
</script>

<style>
  :global(article a:focus) {
    outline: 2px solid rgb(99 102 241) !important;
    outline-offset: 2px !important;
    border-radius: 2px;
  }

  :global(article a:focus-visible) {
    outline: 2px solid rgb(99 102 241) !important;
    outline-offset: 2px !important;
    background-color: rgba(99, 102, 241, 0.05) !important;
  }

  :global(article a:focus:not(:focus-visible)) {
    outline: none !important;
  }

  @media (prefers-contrast: high) {
    :global(article a) {
      text-decoration: underline !important;
      text-decoration-thickness: 2px !important;
    }

    :global(article a:focus) {
      outline: 3px solid currentColor !important;
      outline-offset: 2px !important;
      background-color: rgba(0, 0, 0, 0.1) !important;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    :global(article a) {
      transition: none !important;
    }
  }

  @media print {
    :global(article a[href^="http"]::after) {
      content: " (" attr(href) ")";
      font-size: 0.8em;
      color: #666;
    }

    :global(article a:focus) {
      outline: none !important;
      background-color: transparent !important;
    }
  }

  @media (max-width: 640px) {
    :global(article a:focus) {
      outline-width: 3px !important;
    }
  }
</style>
